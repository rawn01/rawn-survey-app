[{"/home/gh0st/Desktop/react-course/survey-app-redux/src/index.js":"1","/home/gh0st/Desktop/react-course/survey-app-redux/src/App.js":"2","/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/CreateSurvey.js":"3","/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/MultiSelect.js":"4","/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/SingleSelect.js":"5","/home/gh0st/Desktop/react-course/survey-app-redux/src/store/configureStore.js":"6","/home/gh0st/Desktop/react-course/survey-app-redux/src/store/responseSlice.js":"7","/home/gh0st/Desktop/react-course/survey-app-redux/src/store/surverySlice.js":"8","/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/TakeSurvey.js":"9","/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/ConfirmSurvey.js":"10","/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/SingleSelectConfirm.js":"11","/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/MultiSelectConfirm.js":"12"},{"size":491,"mtime":1610647818295,"results":"13","hashOfConfig":"14"},{"size":1794,"mtime":1610807132586,"results":"15","hashOfConfig":"14"},{"size":1758,"mtime":1610738190916,"results":"16","hashOfConfig":"14"},{"size":4376,"mtime":1610803755392,"results":"17","hashOfConfig":"14"},{"size":3380,"mtime":1610784476924,"results":"18","hashOfConfig":"14"},{"size":357,"mtime":1610646245798,"results":"19","hashOfConfig":"14"},{"size":348,"mtime":1609962562548,"results":"20","hashOfConfig":"14"},{"size":2020,"mtime":1610798224412,"results":"21","hashOfConfig":"14"},{"size":562,"mtime":1610807127570,"results":"22","hashOfConfig":"14"},{"size":1291,"mtime":1610806190735,"results":"23","hashOfConfig":"14"},{"size":714,"mtime":1610807119374,"results":"24","hashOfConfig":"14"},{"size":997,"mtime":1610807113946,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1oqpllo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gh0st/Desktop/react-course/survey-app-redux/src/index.js",[],["52","53"],"/home/gh0st/Desktop/react-course/survey-app-redux/src/App.js",["54"],"/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/CreateSurvey.js",["55"],"import React, { useState, useEffect } from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport MultiSelect from \"./MultiSelect\";\nimport SingleSelect from \"./SingleSelect\";\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\n\nfunction CreateSurvey() {\n    const [selectType, setSelectType] = useState(\"Select Question Type\");\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const { surveyId } = useParams(); \n    const query = useLocation().search;\n    const history = useHistory();\n\n    const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n    const multiSelect = (e) => setSelectType(() => \"Multi-Select\");\n\n    const singleSelect = (e) => setSelectType(() => \"Single-Select\");\n\n    useEffect(() => {\n        if(query === \"?clear=true\") {\n            setSelectType(\"Select Question Type\");\n            history.replace({\n                search: undefined,\n            });\n        }\n    }, [query]);\n    \n    return ( \n        <>\n            <p>Surver ID: {surveyId}</p>\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                <DropdownToggle caret id=\"questionType\">\n                    {selectType}\n                </DropdownToggle>\n\n                <DropdownMenu>\n                    <DropdownItem onClick={multiSelect}>Multi-select</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={singleSelect}>Single-select</DropdownItem>\n                </DropdownMenu>\n            </Dropdown>\n            { selectType === \"Multi-Select\" ? <MultiSelect /> : undefined}\n            { selectType === \"Single-Select\" ? <SingleSelect /> : undefined}\n        </>\n    );\n}\n\nexport default CreateSurvey;\n","/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/MultiSelect.js",[],"/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/SingleSelect.js",[],"/home/gh0st/Desktop/react-course/survey-app-redux/src/store/configureStore.js",[],"/home/gh0st/Desktop/react-course/survey-app-redux/src/store/responseSlice.js",[],"/home/gh0st/Desktop/react-course/survey-app-redux/src/store/surverySlice.js",["56","57","58","59"],"/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/TakeSurvey.js",[],"/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/ConfirmSurvey.js",["60"],"/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/SingleSelectConfirm.js",[],"/home/gh0st/Desktop/react-course/survey-app-redux/src/Components/MultiSelectConfirm.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":25,"nodeType":"67","messageId":"68","endLine":2,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":28,"column":8,"nodeType":"71","endLine":28,"endColumn":15,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":5,"column":12,"nodeType":"67","messageId":"75","endLine":5,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":17,"column":55,"nodeType":"78","messageId":"79","endLine":17,"endColumn":57},{"ruleId":"76","severity":1,"message":"77","line":30,"column":57,"nodeType":"78","messageId":"79","endLine":30,"endColumn":59},{"ruleId":"76","severity":1,"message":"77","line":43,"column":57,"nodeType":"78","messageId":"79","endLine":43,"endColumn":59},{"ruleId":"76","severity":1,"message":"77","line":16,"column":82,"nodeType":"78","messageId":"79","endLine":16,"endColumn":84},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-shadow-restricted-names","Shadowing of global property 'undefined'.","shadowingRestrictedName","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [history, query]",{"range":"85","text":"86"},[986,993],"[history, query]"]